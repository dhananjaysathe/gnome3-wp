#!/usr/bin/env python

import gtk
import gobject
import os

# Modified by ianonavy. 24 August 2011

class wp_show_conf():
    """ Main class file. """

    def saveopts (self):
        """ Saves options to state file in home directory. """
        
        self.get_fields()
        optsfile =  os.path.join(os.path.expanduser('~'), '.wp-show', 'opts')
        f = open(optsfile,'w')
        data = '\n'.join([self.path, str(self.timeout), self.enabled, 
            str(self.depth)])
        f.write(data)
        f.close()


    def get_fields(self):
        """ Gets the fields. """
        self.path = self.filechooserbutton.get_filename()
        self.timeout = self.spin_button.get_value_as_int() * 60 # min to sec
        self.enabled = str(self.check.get_active()).lower()
        self.depth = self.depth_select.get_value_as_int()


    def retrieve_fields (self):
        """ Retrieves the fields from the option file. """
        optsfile =  os.path.join(os.path.expanduser('~'), '.wp-show', 'opts')

        if os.path.exists(optsfile):
            f = open(optsfile,'r')
            data = f.readlines()
            self.path = data[0].strip('\n')
            self.timeout = int(data[1].strip('\n')) / 60 # sec to min
            self.enabled = (data[2].strip('\n')) == 'true'
            self.depth = int(data[3].strip('\n'))
            f.close()
        
        else : # returns defaults
            self.path = os.path.expanduser('~')
            self.timeout = 10 # Changed default to 10 minutes.
            self.enabled = True
            self.depth = 3


    def setit(self,widget,dummy):
        """ Save the options. """

        self.get_fields()
        request=' '.join(['tools/install', self.path, str(self.timeout), 
            self.enabled,str(self.depth)])
        os.system(request)
        self.saveopts()


    def __init__(self):
        """ Main GTK window definitions."""

        ROOT = os.path.dirname(os.path.realpath(__file__))

        # Create a new window.
        window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        window.set_title("Gnome 3 Wallpaper Slideshow")
        window.connect("delete_event", lambda w,e: gtk.main_quit())
        window.set_border_width(5)
        window.set_default_size(282, 342)

        self.retrieve_fields()

        vbox = gtk.VBox(False,3)
        window.add(vbox)

        # Retrieve and set the artwork.
        artwork = gtk.VBox()
        fileimage = os.path.join(ROOT, 'tools/artwork.png')
        window.set_icon_from_file(fileimage)
        image = gtk.Image()
        image.set_from_file(fileimage)
        artwork.pack_start(image, True, True, 0)
        vbox.pack_start(artwork, True, True, 1)

        frame = gtk.Frame()
        vbox.pack_start(frame, True, True, 1)
        frame.set_border_width(5)

        table = gtk.Table(4, 2)
        table.set_border_width(3)
        table.set_row_spacings(4)
        table.set_col_spacings(6)

        # Wallpaper directory
        label = gtk.Label('Wallpaper Directory: ')
        label.set_alignment(0, 0.5)
        table.attach(label, 0, 1, 0, 1, gtk.FILL, gtk.FILL | gtk.EXPAND, 0, 0)
        frame.add(table)

        self.filechooserbutton = gtk.FileChooserButton('Browse')
        self.filechooserbutton.set_current_folder(self.path)
        self.filechooserbutton.set_tooltip_text('Browse to the folder '
                                                'containing your wallpapers.')
        table.attach(self.filechooserbutton, 1, 2, 0, 1, gtk.FILL, gtk.FILL | \
            gtk.EXPAND, 0, 0)
        self.filechooserbutton.set_action(
            gtk.FILE_CHOOSER_ACTION_SELECT_FOLDER)

        # Timeout
        label = gtk.Label('Timeout (minutes):  ')
        label.set_alignment(0, 0.5)
        table.attach(label, 0, 1, 1, 2, gtk.FILL,gtk.FILL | gtk.EXPAND, 0, 0)

        adjustment = gtk.Adjustment(self.timeout, 1, 1440, 5, 15)
        self.spin_button = gtk.SpinButton(adjustment)
        self.spin_button.set_numeric(True)
        self.spin_button.set_tooltip_text('Time between switch in minutes.')
        table.attach(self.spin_button, 1, 2, 1, 2, gtk.FILL, gtk.FILL | \
            gtk.EXPAND, 0, 0)

        # Directory depth
        label = gtk.Label('Directory Depth : ')
        label.set_alignment(0, 0.5)
        table.attach(label, 0, 1, 2, 3, gtk.FILL,gtk.FILL | gtk.EXPAND, 0, 0)

        adjustment1 = gtk.Adjustment(self.depth, 1, 10, 1, 1)
        self.depth_select = gtk.SpinButton(adjustment1)
        self.depth_select.set_numeric(True)
        self.depth_select.set_tooltip_text('Level to which the'
                                           'subdirectory must be scanned.')
        table.attach(self.depth_select, 1, 2, 2, 3, gtk.FILL, gtk.FILL | \
            gtk.EXPAND, 0, 0)

        # Enabled checkbox
        label = gtk.Label('Enabled? ')
        label.set_alignment(0, 0.5)
        table.attach(label, 0, 1, 3, 4, gtk.FILL,gtk.FILL | gtk.EXPAND, 0, 0)

        self.check = gtk.CheckButton()
        self.check.set_tooltip_text('Enable or disable the slideshow.')
        self.check.set_active(self.enabled)
        table.attach(self.check, 1, 2, 3, 4,gtk.SHRINK,gtk.FILL, 0, 0)

        frame = gtk.Frame()
        hbox = gtk.HBox(True)
        frame.add(hbox)
        vbox.pack_start(frame, False, True, 0)

        button = gtk.Button(stock=gtk.STOCK_CLOSE)
        button.connect("clicked", lambda w: gtk.main_quit())
        hbox.pack_start(button, False, True, 0)
        button.set_flags(gtk.CAN_DEFAULT)
        button.grab_default()

        button = gtk.Button(stock=gtk.STOCK_APPLY)
        button.connect("clicked", self.setit,None)
        hbox.pack_start(button, False, True, 0)

        # Developer credit.
        frame = gtk.Frame ('Developed By: ')
        label = gtk.Label('Dhananjay Sathe : dhananjaysathe@gmail.com\n'
                          'Ian Adam Naval: ianonavy@gmail.com')
        label.set_alignment(0.4, 0.1)
        frame.add(label)
        vbox.pack_start(frame, False, True, 0)

        window.show_all()


def main():
    gtk.main()
    return 0


if __name__ == "__main__":
    wp_show_conf()
    main()
